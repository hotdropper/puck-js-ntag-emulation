function f(c){d.writeTo(a.ahtAddress,a.sensorMeasureCmd);var b=d.readFrom(a.ahtAddress,6);return c?(b[1]<<16|b[2]<<8|b[3])>>4:(b[3]&15)<<16|b[4]<<8|b[5]}function e(c,b,e){this.scl=c;this.sda=b;this.bitrate=e||3E5;d.setup({scl:this.scl,sda:this.sda,bitrate:this.bitrate});d.writeTo(a.ahtAddress,a.sensorCalibrateCmd);8===(d.readFrom(a.ahtAddress,1)&104)?console.log("Connection successful"):console.log("Connection failed")}var d=new I2C,a={ahtAddress:56,sensorCalibrateCmd:[225,8,0],sensorMeasureCmd:[172,
51,0],bytesInAMebibyte:1048576,getRHCmd:!0,getTempCmd:!1,waterVapor:17.62,barometricPressure:243.5};e.prototype.getTemperature=function(){return 200*f(a.getTempCmd)/a.bytesInAMebibyte-50};e.prototype.getHumidity=function(){var c=f(a.getRHCmd);return 0===c?0:100*c/a.bytesInAMebibyte};e.prototype.getDewPoint=function(){var c=this.getHumidity(),b=this.getTemperature();c=Math.log(c/100)+a.waterVapor*b/(a.barometricPressure+b);return a.barometricPressure*c/(a.waterVapor-c)};exports.connect=function(a,
b,d){return new e(a,b,d)}