function c(b,a){this.i2c=b;this.debugMode=a;this.w(32,144)}exports.connect=function(b,a){return new c(b,a)};c.prototype.getPressure=function(b){var a=this.r(40,3);if(128==(a[2]&128))return console.log("[ERR] LPS25HB returns a negative value: we do not handle this case...."),-1;var c=(65536*(a[2]&255)+256*(a[1]&255)+(a[0]&255))/4096;this.debugMode&&(console.log(" LPS25HB debug : getPressure return data[2..0]="+a[2]+" "+a[1]+" "+a[0]),console.log(" LPS25HB debug : Pressure in hPa is "+c));
b(c)};c.prototype.r=function(b,a){this.debugMode&&console.log(" LPS25HB debug : read "+a+" bytes at address "+b);this.i2c.writeTo({address:93,stop:!1},128|b);return this.i2c.readFrom(93,a)};c.prototype.w=function(b,a){this.debugMode&&console.log(" LPS25HB debug : write "+a+" at address "+b);this.i2c.writeTo(93,b,a)}